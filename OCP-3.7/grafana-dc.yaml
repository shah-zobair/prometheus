apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: null
  generation: 1
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    app: grafana
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: grafana
      name: grafana
    spec:
      containers:
      - command:
        - ./bin/grafana-server
        image: docker-registry.default.svc:5000/openshift/grafana-ocp:v3.7
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: grafana-http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /root/go/src/github.com/grafana/grafana/data
          name: grafana-data
        - mountPath: /root/go/src/github.com/grafana/grafana/conf
          name: grafanaconfig
        - mountPath: /etc/tls/private
          name: grafana-tls
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dash-config
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasource
        - mountPath: /var/lib/grafana/dashboards/pods
          name: grafana-dashboard-pods
        - mountPath: /var/lib/grafana/dashboards/capacity
          name: grafana-dashboard-capacity
        - mountPath: /var/lib/grafana/dashboards/master-api
          name: grafana-dashboard-master-api
        - mountPath: /var/lib/grafana/dashboards/nodes
          name: grafana-dashboard-nodes
        - mountPath: /var/lib/grafana/dashboards/traffic
          name: grafana-dashboard-traffic
        - mountPath: /var/lib/grafana/dashboards/router
          name: grafana-dashboard-router
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: grafana
      serviceAccountName: grafana
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: grafana-config
        name: grafanaconfig
      - name: grafana-tls
        secret:
          defaultMode: 420
          secretName: grafana-tls
      - emptyDir: {}
        name: grafana-data
      - configMap:
          defaultMode: 420
          name: grafana-datasource
        name: grafana-datasource
      - configMap:
          defaultMode: 420
          name: grafana-dash-config
        name: grafana-dash-config
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-pods
        name: grafana-dashboard-pods
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-capacity
        name: grafana-dashboard-capacity
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-master-api
        name: grafana-dashboard-master-api
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-nodes
        name: grafana-dashboard-nodes
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-traffic
        name: grafana-dashboard-traffic
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-router
        name: grafana-dashboard-router
  test: false
  triggers:
  - type: ConfigChange
